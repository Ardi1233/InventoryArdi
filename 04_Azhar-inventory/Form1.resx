<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>